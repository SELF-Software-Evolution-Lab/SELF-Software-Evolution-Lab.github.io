{"version":3,"sources":["webpack:///./src/pages/finished_projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/projectSummary.js"],"names":["data","className","allProjectsJson","edges","map","n","i","key","node","query","m","module","exports","require","default","StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","StaticQuery","props","children","Consumer","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Body","Header","as","href","slug","name","title","allResearchLinesJson","find","id","researchLine","Text","summary"],"mappings":"0FAAA,qGAOe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAWC,UAAU,QACnB,iDACA,kBAAC,IAAD,KACE,kBAAC,WAAD,KACGD,EAAKE,gBAAgBC,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OAC9B,kBAAC,IAAD,CAAgBC,IAAKD,EAAGE,KAAMH,EAAEG,eAQvC,IAAMC,EAAK,W,oBCxBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,iCCA/C,sDAgBMK,GAhBN,mBAcyBC,QAAOC,QAELC,IAAMC,cAAc,KAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBrB,EAAuB,EAAvBA,KAAMS,EAAiB,EAAjBA,MAAOa,EAAU,EAAVA,OACzDC,EAAYvB,EACdA,EAAKA,KACLqB,EAAgBZ,IAAUY,EAAgBZ,GAAOT,KAErD,OACE,kBAAC,IAAMwB,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpB1B,EAAkC0B,EAAlC1B,KAAMS,EAA4BiB,EAA5BjB,MAAOa,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACZ,EAAmBa,SAApB,MACG,SAAAP,GAAe,OACd,kBAACD,EAAD,CACEpB,KAAMA,EACNS,MAAOA,EACPa,OAAQA,GAAUK,EAClBN,gBAAiBA,S,2ECnBZQ,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEb,IAAMc,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,sGCFI,aAAAR,GAAK,OAClB,kBAAC,IAAD,CACEjB,MAAK,YAYLa,OAAQ,SAAAtB,GAAI,OACV,kBAAC,IAAKmC,KAAN,KACE,kBAAC,IAAD,KACE,kBAAC,IAAKC,OAAN,CAAaC,GAAI,MACf,uBAAGC,KAAM,IAAMZ,EAAMlB,KAAK+B,MAAOb,EAAMlB,KAAKgC,MAC5C,0BAAMvC,UAAU,2BAA2BwC,MAAM,iBAC/C,0BAAMxC,UAAU,kBAAhB,SACCD,EAAK0C,qBAAqBvC,MAAMwC,MAAK,SAAAtC,GAAC,OAAIA,EAAEG,KAAKoC,KAAOlB,EAAMlB,KAAKqC,iBACjE7C,EAAK0C,qBAAqBvC,MAAMwC,MAAK,SAAAtC,GAAC,OAAIA,EAAEG,KAAKoC,KAAOlB,EAAMlB,KAAKqC,gBAAcrC,KAAKgC,OAE7F,kBAAC,IAAKL,KAAN,KACE,kBAAC,IAAKW,KAAN,CAAW7C,UAAU,gBAClByB,EAAMlB,KAAKuC,aAzBxB,W","file":"component---src-pages-finished-projects-js-16fed0ad2a1057651192.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Header from \"../components/header\"\r\nimport ProjectSummary from \"../components/projectSummary\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Card from \"react-bootstrap/Card\"\r\n\r\nexport default ({ data }) => {\r\n  return (\r\n    <Fragment>\r\n      <Header/>\r\n      <Container className=\"mt-3\">\r\n        <h1>Finished Projects</h1>\r\n        <Card>\r\n          <Fragment>\r\n            {data.allProjectsJson.edges.map((n, i) =>\r\n              <ProjectSummary key={i} node={n.node}/>)}\r\n          </Fragment>\r\n        </Card>\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\nquery {\r\n  allProjectsJson(filter: {status: {eq: \"inactive\"}}) {\r\n    edges {\r\n      node {\r\n        id\r\n        name\r\n        status\r\n        summary\r\n        researchLine\r\n        slug\r\n      }\r\n    }\r\n  }\r\n}\r\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport Card from \"react-bootstrap/Card\"\r\nimport \"./project.css\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nexport default props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query Research {\r\n        allResearchLinesJson {\r\n          edges {\r\n            node {\r\n              name\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <Card.Body>\r\n        <Card>\r\n          <Card.Header as={\"h4\"}>\r\n            <a href={\"/\" + props.node.slug}>{props.node.name}</a>\r\n            <span className=\"text-muted research-line\" title=\"Research Line\">\r\n              <span className=\"material-icons\">label</span>\r\n              {data.allResearchLinesJson.edges.find(n => n.node.id === props.node.researchLine)\r\n              && data.allResearchLinesJson.edges.find(n => n.node.id === props.node.researchLine).node.name}</span>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Text className=\"text-justify\">\r\n              {props.node.summary}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Card.Body>\r\n    )}\r\n  />\r\n)"],"sourceRoot":""}